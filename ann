{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard"},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"id":"EmluwP2eq1XO","executionInfo":{"status":"ok","timestamp":1681968034952,"user_tz":-330,"elapsed":12,"user":{"displayName":"Kavindu Balasooriya","userId":"09852269833330150558"}}},"outputs":[],"source":["\n","\n","from keras.layers.regularization.dropout import Dropout\n","\n","import pandas as pd\n","import numpy as np\n","\n","\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import LabelEncoder\n","from keras.utils import np_utils\n","from keras.models import Sequential\n","from keras.layers import Dense\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import classification_report\n","import seaborn as sn\n","from scikeras.wrappers import KerasClassifier\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import KFold"]},{"cell_type":"code","source":["pip install scikeras"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pIxyW-PHtNxd","executionInfo":{"status":"ok","timestamp":1681968030321,"user_tz":-330,"elapsed":8773,"user":{"displayName":"Kavindu Balasooriya","userId":"09852269833330150558"}},"outputId":"e8c271ad-cb65-4f00-f002-709b05e1aaa3"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting scikeras\n","  Downloading scikeras-0.10.0-py3-none-any.whl (27 kB)\n","Requirement already satisfied: scikit-learn>=1.0.0 in /usr/local/lib/python3.9/dist-packages (from scikeras) (1.2.2)\n","Requirement already satisfied: packaging>=0.21 in /usr/local/lib/python3.9/dist-packages (from scikeras) (23.1)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.9/dist-packages (from scikit-learn>=1.0.0->scikeras) (1.2.0)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.9/dist-packages (from scikit-learn>=1.0.0->scikeras) (1.10.1)\n","Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.9/dist-packages (from scikit-learn>=1.0.0->scikeras) (1.22.4)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.9/dist-packages (from scikit-learn>=1.0.0->scikeras) (3.1.0)\n","Installing collected packages: scikeras\n","Successfully installed scikeras-0.10.0\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5OrLPswVmS9l","executionInfo":{"status":"ok","timestamp":1681968063533,"user_tz":-330,"elapsed":24049,"user":{"displayName":"Kavindu Balasooriya","userId":"09852269833330150558"}},"outputId":"dda4c2b4-bf79-43a4-fd84-4d4abf6c7927"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["#file path\n","path = '/content/drive/MyDrive/research_data/TrainingUpdated.csv'\n","#read csv file\n","df = pd.read_csv(path, on_bad_lines='skip',low_memory=False)\n","#check info\n","# print(df.head())\n","# df.info()\n","# drop rows with nan\n","df.dropna()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":835},"id":"l3DKsW7wmTIy","executionInfo":{"status":"ok","timestamp":1681968069192,"user_tz":-330,"elapsed":1148,"user":{"displayName":"Kavindu Balasooriya","userId":"09852269833330150558"}},"outputId":"e046783c-ca91-4280-86a7-33c59e06c758"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      itching  skin_rash  nodal_skin_eruptions  continuous_sneezing  \\\n","0           0          0                     0                    0   \n","1           0          0                     0                    0   \n","2           0          0                     0                    0   \n","3           0          0                     0                    0   \n","4           0          0                     0                    0   \n","...       ...        ...                   ...                  ...   \n","5045        0          0                     0                    0   \n","5046        0          0                     0                    0   \n","5047        0          0                     0                    0   \n","5048        0          0                     0                    0   \n","5049        0          0                     0                    0   \n","\n","      shivering  chills  joint_pain  stomach_pain  acidity  ulcers_on_tongue  \\\n","0             0       0           0             0        0                 0   \n","1             0       0           0             0        0                 0   \n","2             0       0           0             0        0                 0   \n","3             0       0           0             0        0                 0   \n","4             0       0           0             0        0                 0   \n","...         ...     ...         ...           ...      ...               ...   \n","5045          0       0           0             0        0                 0   \n","5046          0       0           0             0        0                 0   \n","5047          0       0           0             0        0                 0   \n","5048          0       0           0             0        0                 0   \n","5049          0       0           0             0        0                 0   \n","\n","      ...  irregular_heart_sound  decrease_alertness  chest_discomfort  \\\n","0     ...                      0                   0                 0   \n","1     ...                      0                   0                 0   \n","2     ...                      0                   0                 0   \n","3     ...                      0                   0                 0   \n","4     ...                      0                   0                 0   \n","...   ...                    ...                 ...               ...   \n","5045  ...                      0                   0                 0   \n","5046  ...                      0                   0                 0   \n","5047  ...                      0                   0                 0   \n","5048  ...                      0                   0                 0   \n","5049  ...                      0                   0                 0   \n","\n","      irregular_heart_beat  heart_murmur  arm_pain  stroke  fainting  \\\n","0                        0             0         0       0         0   \n","1                        0             0         0       0         0   \n","2                        0             0         0       0         0   \n","3                        0             0         0       0         0   \n","4                        0             0         0       0         0   \n","...                    ...           ...       ...     ...       ...   \n","5045                     0             0         0       0         0   \n","5046                     0             0         0       0         0   \n","5047                     0             0         0       0         0   \n","5048                     0             0         0       0         0   \n","5049                     0             0         0       0         0   \n","\n","      shortness_of_breath                                prognosis  \n","0                       0  (vertigo) Paroymsal  Positional Vertigo  \n","1                       0  (vertigo) Paroymsal  Positional Vertigo  \n","2                       0  (vertigo) Paroymsal  Positional Vertigo  \n","3                       0  (vertigo) Paroymsal  Positional Vertigo  \n","4                       0  (vertigo) Paroymsal  Positional Vertigo  \n","...                   ...                                      ...  \n","5045                    0                          Unstable Angina  \n","5046                    0                          Unstable Angina  \n","5047                    1                          Unstable Angina  \n","5048                    1                          Unstable Angina  \n","5049                    0                          Unstable Angina  \n","\n","[5050 rows x 143 columns]"],"text/html":["\n","  <div id=\"df-1e0218fa-aa78-4c30-bd38-fd1d68fa1be4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>itching</th>\n","      <th>skin_rash</th>\n","      <th>nodal_skin_eruptions</th>\n","      <th>continuous_sneezing</th>\n","      <th>shivering</th>\n","      <th>chills</th>\n","      <th>joint_pain</th>\n","      <th>stomach_pain</th>\n","      <th>acidity</th>\n","      <th>ulcers_on_tongue</th>\n","      <th>...</th>\n","      <th>irregular_heart_sound</th>\n","      <th>decrease_alertness</th>\n","      <th>chest_discomfort</th>\n","      <th>irregular_heart_beat</th>\n","      <th>heart_murmur</th>\n","      <th>arm_pain</th>\n","      <th>stroke</th>\n","      <th>fainting</th>\n","      <th>shortness_of_breath</th>\n","      <th>prognosis</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>(vertigo) Paroymsal  Positional Vertigo</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>(vertigo) Paroymsal  Positional Vertigo</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>(vertigo) Paroymsal  Positional Vertigo</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>(vertigo) Paroymsal  Positional Vertigo</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>(vertigo) Paroymsal  Positional Vertigo</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5045</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Unstable Angina</td>\n","    </tr>\n","    <tr>\n","      <th>5046</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Unstable Angina</td>\n","    </tr>\n","    <tr>\n","      <th>5047</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Unstable Angina</td>\n","    </tr>\n","    <tr>\n","      <th>5048</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Unstable Angina</td>\n","    </tr>\n","    <tr>\n","      <th>5049</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Unstable Angina</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5050 rows × 143 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e0218fa-aa78-4c30-bd38-fd1d68fa1be4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1e0218fa-aa78-4c30-bd38-fd1d68fa1be4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1e0218fa-aa78-4c30-bd38-fd1d68fa1be4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["\n","#encode prognosis \n","encoder = LabelEncoder()\n","df[\"prognosis\"] = encoder.fit_transform(df[\"prognosis\"])\n","df = df.sample(frac=1).reset_index(drop=True)\n","#Y\n","Y = df['prognosis']\n","y = np_utils.to_categorical(Y)\n","#X \n","X =df.drop(['prognosis'], axis=1)\n","X = np.array(X)\n","print(X.shape)\n","print(Y.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CeKh75Zhq9bI","executionInfo":{"status":"ok","timestamp":1681968074293,"user_tz":-330,"elapsed":422,"user":{"displayName":"Kavindu Balasooriya","userId":"09852269833330150558"}},"outputId":"22725726-c437-433c-9a6c-b180627e7a02"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["(5050, 142)\n","(5050,)\n"]}]},{"cell_type":"code","source":[" # model 1\n","#  model = Sequential()\n","#  model.add(Dense(64, input_shape=(142,), activation='relu'))\n","#  model.add(Dense(50, activation='softmax'))\n","#  model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","#  model.summary()"],"metadata":{"id":"ST5wi0YcrMB0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[" #  model 2\n","#  model = Sequential()\n","#  model.add(Dense(60, input_shape=(142,), activation='relu'))\n","#  model.add(Dropout(0.5))\n","#  model.add(Dense(50, activation='softmax'))\n","#  model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","#  model.summary()"],"metadata":{"id":"jRvzA5Q1fll0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681968146848,"user_tz":-330,"elapsed":413,"user":{"displayName":"Kavindu Balasooriya","userId":"09852269833330150558"}},"outputId":"49ff5c20-a8c0-48a0-dcd5-9621a0b7f6ca"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_3 (Dense)             (None, 60)                8580      \n","                                                                 \n"," dropout_2 (Dropout)         (None, 60)                0         \n","                                                                 \n"," dense_4 (Dense)             (None, 50)                3050      \n","                                                                 \n","=================================================================\n","Total params: 11,630\n","Trainable params: 11,630\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":[" # model 3\n","#  model = Sequential()\n","#  model.add(Dense(142, input_shape=(142,), activation='relu'))\n","#  model.add(Dropout(0.5))\n","#  model.add(Dense(71, activation='relu'))\n","#  model.add(Dropout(0.5))\n","#  model.add(Dense(50, activation='softmax'))\n","#  model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","#  model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OzZhS5HbflpY","executionInfo":{"status":"ok","timestamp":1681968082217,"user_tz":-330,"elapsed":3837,"user":{"displayName":"Kavindu Balasooriya","userId":"09852269833330150558"}},"outputId":"69cddb95-c1b8-416f-d3eb-5768a651631b"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 142)               20306     \n","                                                                 \n"," dropout (Dropout)           (None, 142)               0         \n","                                                                 \n"," dense_1 (Dense)             (None, 71)                10153     \n","                                                                 \n"," dropout_1 (Dropout)         (None, 71)                0         \n","                                                                 \n"," dense_2 (Dense)             (None, 50)                3600      \n","                                                                 \n","=================================================================\n","Total params: 34,059\n","Trainable params: 34,059\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["#  # model 4\n","#  model = Sequential()\n","#  model.add(Dense(71, input_shape=(142,), activation='relu'))\n","#  model.add(Dense(35, activation='relu'))\n","#  model.add(Dense(50, activation='softmax'))\n","#  model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","#  model.summary()"],"metadata":{"id":"Xt7BwP5aipIa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history = model.fit(X,y,epochs=100,batch_size=256,shuffle=True,validation_split=0.2,verbose=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aLwHq8GfrQSD","executionInfo":{"status":"ok","timestamp":1681968164272,"user_tz":-330,"elapsed":11008,"user":{"displayName":"Kavindu Balasooriya","userId":"09852269833330150558"}},"outputId":"5f37d6b8-8e09-45d7-ca94-ded504b559c1"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","16/16 - 1s - loss: 3.8120 - accuracy: 0.0557 - val_loss: 3.6193 - val_accuracy: 0.3158 - 1s/epoch - 72ms/step\n","Epoch 2/100\n","16/16 - 0s - loss: 3.4926 - accuracy: 0.2854 - val_loss: 3.2918 - val_accuracy: 0.7535 - 82ms/epoch - 5ms/step\n","Epoch 3/100\n","16/16 - 0s - loss: 3.1469 - accuracy: 0.5364 - val_loss: 2.9124 - val_accuracy: 0.9109 - 91ms/epoch - 6ms/step\n","Epoch 4/100\n","16/16 - 0s - loss: 2.7666 - accuracy: 0.7020 - val_loss: 2.4825 - val_accuracy: 0.9455 - 87ms/epoch - 5ms/step\n","Epoch 5/100\n","16/16 - 0s - loss: 2.3503 - accuracy: 0.7995 - val_loss: 2.0339 - val_accuracy: 0.9495 - 81ms/epoch - 5ms/step\n","Epoch 6/100\n","16/16 - 0s - loss: 1.9508 - accuracy: 0.8441 - val_loss: 1.6077 - val_accuracy: 0.9505 - 93ms/epoch - 6ms/step\n","Epoch 7/100\n","16/16 - 0s - loss: 1.6064 - accuracy: 0.8767 - val_loss: 1.2406 - val_accuracy: 0.9505 - 86ms/epoch - 5ms/step\n","Epoch 8/100\n","16/16 - 0s - loss: 1.3146 - accuracy: 0.8908 - val_loss: 0.9470 - val_accuracy: 0.9505 - 77ms/epoch - 5ms/step\n","Epoch 9/100\n","16/16 - 0s - loss: 1.0532 - accuracy: 0.9064 - val_loss: 0.7301 - val_accuracy: 0.9505 - 84ms/epoch - 5ms/step\n","Epoch 10/100\n","16/16 - 0s - loss: 0.8788 - accuracy: 0.9156 - val_loss: 0.5730 - val_accuracy: 0.9505 - 71ms/epoch - 4ms/step\n","Epoch 11/100\n","16/16 - 0s - loss: 0.7377 - accuracy: 0.9228 - val_loss: 0.4643 - val_accuracy: 0.9505 - 84ms/epoch - 5ms/step\n","Epoch 12/100\n","16/16 - 0s - loss: 0.6520 - accuracy: 0.9198 - val_loss: 0.3890 - val_accuracy: 0.9515 - 82ms/epoch - 5ms/step\n","Epoch 13/100\n","16/16 - 0s - loss: 0.5686 - accuracy: 0.9245 - val_loss: 0.3341 - val_accuracy: 0.9535 - 99ms/epoch - 6ms/step\n","Epoch 14/100\n","16/16 - 0s - loss: 0.4997 - accuracy: 0.9334 - val_loss: 0.2931 - val_accuracy: 0.9554 - 93ms/epoch - 6ms/step\n","Epoch 15/100\n","16/16 - 0s - loss: 0.4593 - accuracy: 0.9384 - val_loss: 0.2615 - val_accuracy: 0.9584 - 77ms/epoch - 5ms/step\n","Epoch 16/100\n","16/16 - 0s - loss: 0.4300 - accuracy: 0.9401 - val_loss: 0.2367 - val_accuracy: 0.9594 - 73ms/epoch - 5ms/step\n","Epoch 17/100\n","16/16 - 0s - loss: 0.3921 - accuracy: 0.9418 - val_loss: 0.2154 - val_accuracy: 0.9624 - 72ms/epoch - 5ms/step\n","Epoch 18/100\n","16/16 - 0s - loss: 0.3565 - accuracy: 0.9460 - val_loss: 0.1972 - val_accuracy: 0.9644 - 73ms/epoch - 5ms/step\n","Epoch 19/100\n","16/16 - 0s - loss: 0.3317 - accuracy: 0.9468 - val_loss: 0.1821 - val_accuracy: 0.9673 - 80ms/epoch - 5ms/step\n","Epoch 20/100\n","16/16 - 0s - loss: 0.3033 - accuracy: 0.9525 - val_loss: 0.1688 - val_accuracy: 0.9703 - 71ms/epoch - 4ms/step\n","Epoch 21/100\n","16/16 - 0s - loss: 0.2878 - accuracy: 0.9559 - val_loss: 0.1566 - val_accuracy: 0.9713 - 101ms/epoch - 6ms/step\n","Epoch 22/100\n","16/16 - 0s - loss: 0.2683 - accuracy: 0.9567 - val_loss: 0.1457 - val_accuracy: 0.9733 - 87ms/epoch - 5ms/step\n","Epoch 23/100\n","16/16 - 0s - loss: 0.2570 - accuracy: 0.9584 - val_loss: 0.1365 - val_accuracy: 0.9743 - 75ms/epoch - 5ms/step\n","Epoch 24/100\n","16/16 - 0s - loss: 0.2362 - accuracy: 0.9624 - val_loss: 0.1273 - val_accuracy: 0.9752 - 78ms/epoch - 5ms/step\n","Epoch 25/100\n","16/16 - 0s - loss: 0.2289 - accuracy: 0.9676 - val_loss: 0.1199 - val_accuracy: 0.9762 - 71ms/epoch - 4ms/step\n","Epoch 26/100\n","16/16 - 0s - loss: 0.2158 - accuracy: 0.9651 - val_loss: 0.1120 - val_accuracy: 0.9772 - 73ms/epoch - 5ms/step\n","Epoch 27/100\n","16/16 - 0s - loss: 0.2066 - accuracy: 0.9676 - val_loss: 0.1056 - val_accuracy: 0.9782 - 71ms/epoch - 4ms/step\n","Epoch 28/100\n","16/16 - 0s - loss: 0.1991 - accuracy: 0.9658 - val_loss: 0.0999 - val_accuracy: 0.9812 - 78ms/epoch - 5ms/step\n","Epoch 29/100\n","16/16 - 0s - loss: 0.1898 - accuracy: 0.9676 - val_loss: 0.0941 - val_accuracy: 0.9832 - 87ms/epoch - 5ms/step\n","Epoch 30/100\n","16/16 - 0s - loss: 0.1829 - accuracy: 0.9691 - val_loss: 0.0893 - val_accuracy: 0.9832 - 73ms/epoch - 5ms/step\n","Epoch 31/100\n","16/16 - 0s - loss: 0.1762 - accuracy: 0.9700 - val_loss: 0.0853 - val_accuracy: 0.9822 - 71ms/epoch - 4ms/step\n","Epoch 32/100\n","16/16 - 0s - loss: 0.1667 - accuracy: 0.9728 - val_loss: 0.0808 - val_accuracy: 0.9842 - 70ms/epoch - 4ms/step\n","Epoch 33/100\n","16/16 - 0s - loss: 0.1603 - accuracy: 0.9745 - val_loss: 0.0767 - val_accuracy: 0.9861 - 84ms/epoch - 5ms/step\n","Epoch 34/100\n","16/16 - 0s - loss: 0.1508 - accuracy: 0.9738 - val_loss: 0.0730 - val_accuracy: 0.9861 - 71ms/epoch - 4ms/step\n","Epoch 35/100\n","16/16 - 0s - loss: 0.1487 - accuracy: 0.9748 - val_loss: 0.0696 - val_accuracy: 0.9871 - 91ms/epoch - 6ms/step\n","Epoch 36/100\n","16/16 - 0s - loss: 0.1440 - accuracy: 0.9765 - val_loss: 0.0664 - val_accuracy: 0.9881 - 90ms/epoch - 6ms/step\n","Epoch 37/100\n","16/16 - 0s - loss: 0.1333 - accuracy: 0.9767 - val_loss: 0.0638 - val_accuracy: 0.9891 - 75ms/epoch - 5ms/step\n","Epoch 38/100\n","16/16 - 0s - loss: 0.1373 - accuracy: 0.9777 - val_loss: 0.0616 - val_accuracy: 0.9891 - 71ms/epoch - 4ms/step\n","Epoch 39/100\n","16/16 - 0s - loss: 0.1326 - accuracy: 0.9750 - val_loss: 0.0591 - val_accuracy: 0.9891 - 82ms/epoch - 5ms/step\n","Epoch 40/100\n","16/16 - 0s - loss: 0.1242 - accuracy: 0.9787 - val_loss: 0.0569 - val_accuracy: 0.9891 - 80ms/epoch - 5ms/step\n","Epoch 41/100\n","16/16 - 0s - loss: 0.1189 - accuracy: 0.9797 - val_loss: 0.0547 - val_accuracy: 0.9891 - 73ms/epoch - 5ms/step\n","Epoch 42/100\n","16/16 - 0s - loss: 0.1230 - accuracy: 0.9780 - val_loss: 0.0530 - val_accuracy: 0.9891 - 82ms/epoch - 5ms/step\n","Epoch 43/100\n","16/16 - 0s - loss: 0.1166 - accuracy: 0.9777 - val_loss: 0.0512 - val_accuracy: 0.9891 - 77ms/epoch - 5ms/step\n","Epoch 44/100\n","16/16 - 0s - loss: 0.1116 - accuracy: 0.9800 - val_loss: 0.0494 - val_accuracy: 0.9911 - 72ms/epoch - 4ms/step\n","Epoch 45/100\n","16/16 - 0s - loss: 0.1087 - accuracy: 0.9804 - val_loss: 0.0480 - val_accuracy: 0.9911 - 87ms/epoch - 5ms/step\n","Epoch 46/100\n","16/16 - 0s - loss: 0.1072 - accuracy: 0.9802 - val_loss: 0.0468 - val_accuracy: 0.9911 - 92ms/epoch - 6ms/step\n","Epoch 47/100\n","16/16 - 0s - loss: 0.1104 - accuracy: 0.9795 - val_loss: 0.0452 - val_accuracy: 0.9921 - 74ms/epoch - 5ms/step\n","Epoch 48/100\n","16/16 - 0s - loss: 0.1016 - accuracy: 0.9809 - val_loss: 0.0436 - val_accuracy: 0.9931 - 84ms/epoch - 5ms/step\n","Epoch 49/100\n","16/16 - 0s - loss: 0.1039 - accuracy: 0.9797 - val_loss: 0.0426 - val_accuracy: 0.9931 - 83ms/epoch - 5ms/step\n","Epoch 50/100\n","16/16 - 0s - loss: 0.0967 - accuracy: 0.9800 - val_loss: 0.0418 - val_accuracy: 0.9931 - 82ms/epoch - 5ms/step\n","Epoch 51/100\n","16/16 - 0s - loss: 0.0970 - accuracy: 0.9807 - val_loss: 0.0409 - val_accuracy: 0.9941 - 87ms/epoch - 5ms/step\n","Epoch 52/100\n","16/16 - 0s - loss: 0.0886 - accuracy: 0.9842 - val_loss: 0.0396 - val_accuracy: 0.9941 - 77ms/epoch - 5ms/step\n","Epoch 53/100\n","16/16 - 0s - loss: 0.0890 - accuracy: 0.9814 - val_loss: 0.0388 - val_accuracy: 0.9941 - 82ms/epoch - 5ms/step\n","Epoch 54/100\n","16/16 - 0s - loss: 0.0875 - accuracy: 0.9837 - val_loss: 0.0382 - val_accuracy: 0.9941 - 82ms/epoch - 5ms/step\n","Epoch 55/100\n","16/16 - 0s - loss: 0.0931 - accuracy: 0.9802 - val_loss: 0.0373 - val_accuracy: 0.9941 - 81ms/epoch - 5ms/step\n","Epoch 56/100\n","16/16 - 0s - loss: 0.0912 - accuracy: 0.9807 - val_loss: 0.0366 - val_accuracy: 0.9941 - 103ms/epoch - 6ms/step\n","Epoch 57/100\n","16/16 - 0s - loss: 0.0838 - accuracy: 0.9837 - val_loss: 0.0359 - val_accuracy: 0.9941 - 108ms/epoch - 7ms/step\n","Epoch 58/100\n","16/16 - 0s - loss: 0.0836 - accuracy: 0.9812 - val_loss: 0.0356 - val_accuracy: 0.9941 - 112ms/epoch - 7ms/step\n","Epoch 59/100\n","16/16 - 0s - loss: 0.0808 - accuracy: 0.9854 - val_loss: 0.0346 - val_accuracy: 0.9941 - 108ms/epoch - 7ms/step\n","Epoch 60/100\n","16/16 - 0s - loss: 0.0780 - accuracy: 0.9851 - val_loss: 0.0337 - val_accuracy: 0.9941 - 105ms/epoch - 7ms/step\n","Epoch 61/100\n","16/16 - 0s - loss: 0.0809 - accuracy: 0.9832 - val_loss: 0.0330 - val_accuracy: 0.9941 - 108ms/epoch - 7ms/step\n","Epoch 62/100\n","16/16 - 0s - loss: 0.0762 - accuracy: 0.9866 - val_loss: 0.0328 - val_accuracy: 0.9941 - 101ms/epoch - 6ms/step\n","Epoch 63/100\n","16/16 - 0s - loss: 0.0794 - accuracy: 0.9839 - val_loss: 0.0320 - val_accuracy: 0.9941 - 113ms/epoch - 7ms/step\n","Epoch 64/100\n","16/16 - 0s - loss: 0.0773 - accuracy: 0.9861 - val_loss: 0.0315 - val_accuracy: 0.9941 - 102ms/epoch - 6ms/step\n","Epoch 65/100\n","16/16 - 0s - loss: 0.0718 - accuracy: 0.9869 - val_loss: 0.0310 - val_accuracy: 0.9941 - 109ms/epoch - 7ms/step\n","Epoch 66/100\n","16/16 - 0s - loss: 0.0719 - accuracy: 0.9851 - val_loss: 0.0303 - val_accuracy: 0.9941 - 106ms/epoch - 7ms/step\n","Epoch 67/100\n","16/16 - 0s - loss: 0.0696 - accuracy: 0.9879 - val_loss: 0.0296 - val_accuracy: 0.9941 - 105ms/epoch - 7ms/step\n","Epoch 68/100\n","16/16 - 0s - loss: 0.0743 - accuracy: 0.9837 - val_loss: 0.0290 - val_accuracy: 0.9950 - 121ms/epoch - 8ms/step\n","Epoch 69/100\n","16/16 - 0s - loss: 0.0689 - accuracy: 0.9869 - val_loss: 0.0288 - val_accuracy: 0.9950 - 123ms/epoch - 8ms/step\n","Epoch 70/100\n","16/16 - 0s - loss: 0.0667 - accuracy: 0.9866 - val_loss: 0.0288 - val_accuracy: 0.9941 - 109ms/epoch - 7ms/step\n","Epoch 71/100\n","16/16 - 0s - loss: 0.0672 - accuracy: 0.9861 - val_loss: 0.0280 - val_accuracy: 0.9950 - 100ms/epoch - 6ms/step\n","Epoch 72/100\n","16/16 - 0s - loss: 0.0615 - accuracy: 0.9869 - val_loss: 0.0273 - val_accuracy: 0.9950 - 98ms/epoch - 6ms/step\n","Epoch 73/100\n","16/16 - 0s - loss: 0.0709 - accuracy: 0.9834 - val_loss: 0.0269 - val_accuracy: 0.9950 - 109ms/epoch - 7ms/step\n","Epoch 74/100\n","16/16 - 0s - loss: 0.0684 - accuracy: 0.9849 - val_loss: 0.0266 - val_accuracy: 0.9950 - 110ms/epoch - 7ms/step\n","Epoch 75/100\n","16/16 - 0s - loss: 0.0635 - accuracy: 0.9864 - val_loss: 0.0267 - val_accuracy: 0.9950 - 102ms/epoch - 6ms/step\n","Epoch 76/100\n","16/16 - 0s - loss: 0.0604 - accuracy: 0.9881 - val_loss: 0.0264 - val_accuracy: 0.9941 - 106ms/epoch - 7ms/step\n","Epoch 77/100\n","16/16 - 0s - loss: 0.0658 - accuracy: 0.9847 - val_loss: 0.0258 - val_accuracy: 0.9950 - 149ms/epoch - 9ms/step\n","Epoch 78/100\n","16/16 - 0s - loss: 0.0634 - accuracy: 0.9869 - val_loss: 0.0257 - val_accuracy: 0.9950 - 103ms/epoch - 6ms/step\n","Epoch 79/100\n","16/16 - 0s - loss: 0.0607 - accuracy: 0.9869 - val_loss: 0.0254 - val_accuracy: 0.9950 - 104ms/epoch - 7ms/step\n","Epoch 80/100\n","16/16 - 0s - loss: 0.0598 - accuracy: 0.9866 - val_loss: 0.0254 - val_accuracy: 0.9950 - 105ms/epoch - 7ms/step\n","Epoch 81/100\n","16/16 - 0s - loss: 0.0647 - accuracy: 0.9851 - val_loss: 0.0246 - val_accuracy: 0.9950 - 107ms/epoch - 7ms/step\n","Epoch 82/100\n","16/16 - 0s - loss: 0.0598 - accuracy: 0.9866 - val_loss: 0.0248 - val_accuracy: 0.9941 - 129ms/epoch - 8ms/step\n","Epoch 83/100\n","16/16 - 0s - loss: 0.0589 - accuracy: 0.9876 - val_loss: 0.0246 - val_accuracy: 0.9960 - 115ms/epoch - 7ms/step\n","Epoch 84/100\n","16/16 - 0s - loss: 0.0627 - accuracy: 0.9854 - val_loss: 0.0242 - val_accuracy: 0.9950 - 112ms/epoch - 7ms/step\n","Epoch 85/100\n","16/16 - 0s - loss: 0.0604 - accuracy: 0.9854 - val_loss: 0.0242 - val_accuracy: 0.9950 - 129ms/epoch - 8ms/step\n","Epoch 86/100\n","16/16 - 0s - loss: 0.0600 - accuracy: 0.9849 - val_loss: 0.0240 - val_accuracy: 0.9941 - 91ms/epoch - 6ms/step\n","Epoch 87/100\n","16/16 - 0s - loss: 0.0578 - accuracy: 0.9856 - val_loss: 0.0235 - val_accuracy: 0.9941 - 75ms/epoch - 5ms/step\n","Epoch 88/100\n","16/16 - 0s - loss: 0.0567 - accuracy: 0.9874 - val_loss: 0.0233 - val_accuracy: 0.9950 - 89ms/epoch - 6ms/step\n","Epoch 89/100\n","16/16 - 0s - loss: 0.0532 - accuracy: 0.9894 - val_loss: 0.0235 - val_accuracy: 0.9941 - 89ms/epoch - 6ms/step\n","Epoch 90/100\n","16/16 - 0s - loss: 0.0558 - accuracy: 0.9876 - val_loss: 0.0234 - val_accuracy: 0.9941 - 83ms/epoch - 5ms/step\n","Epoch 91/100\n","16/16 - 0s - loss: 0.0509 - accuracy: 0.9884 - val_loss: 0.0232 - val_accuracy: 0.9950 - 90ms/epoch - 6ms/step\n","Epoch 92/100\n","16/16 - 0s - loss: 0.0536 - accuracy: 0.9866 - val_loss: 0.0230 - val_accuracy: 0.9950 - 86ms/epoch - 5ms/step\n","Epoch 93/100\n","16/16 - 0s - loss: 0.0510 - accuracy: 0.9881 - val_loss: 0.0226 - val_accuracy: 0.9950 - 84ms/epoch - 5ms/step\n","Epoch 94/100\n","16/16 - 0s - loss: 0.0545 - accuracy: 0.9864 - val_loss: 0.0223 - val_accuracy: 0.9950 - 73ms/epoch - 5ms/step\n","Epoch 95/100\n","16/16 - 0s - loss: 0.0510 - accuracy: 0.9896 - val_loss: 0.0222 - val_accuracy: 0.9950 - 81ms/epoch - 5ms/step\n","Epoch 96/100\n","16/16 - 0s - loss: 0.0524 - accuracy: 0.9874 - val_loss: 0.0221 - val_accuracy: 0.9941 - 87ms/epoch - 5ms/step\n","Epoch 97/100\n","16/16 - 0s - loss: 0.0471 - accuracy: 0.9896 - val_loss: 0.0222 - val_accuracy: 0.9941 - 81ms/epoch - 5ms/step\n","Epoch 98/100\n","16/16 - 0s - loss: 0.0505 - accuracy: 0.9879 - val_loss: 0.0222 - val_accuracy: 0.9941 - 71ms/epoch - 4ms/step\n","Epoch 99/100\n","16/16 - 0s - loss: 0.0529 - accuracy: 0.9871 - val_loss: 0.0220 - val_accuracy: 0.9950 - 75ms/epoch - 5ms/step\n","Epoch 100/100\n","16/16 - 0s - loss: 0.0492 - accuracy: 0.9869 - val_loss: 0.0216 - val_accuracy: 0.9950 - 82ms/epoch - 5ms/step\n"]}]},{"cell_type":"code","source":[" acc = history.history['accuracy']\n"," val_acc = history.history['val_accuracy']\n"," # loss\n"," loss = history.history['loss']\n"," val_loss = history.history['val_loss']\n","\n"," # range of X (no. of epochs)\n"," epochs = range(1, len(acc) + 1)\n","\n"," # plot\n"," plt.plot(epochs, acc, 'r', label='Training accuracy')\n"," plt.plot(epochs, val_acc, 'g', label='Validation accuracy')\n"," plt.title('Training and validation accuracy')\n"," plt.xlabel('Epochs')\n"," plt.ylabel('Accuracy')\n"," plt.legend()\n"," plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"p0pKftIftouE","executionInfo":{"status":"ok","timestamp":1681968168628,"user_tz":-330,"elapsed":585,"user":{"displayName":"Kavindu Balasooriya","userId":"09852269833330150558"}},"outputId":"48d3ea3d-06bf-485e-dad7-f876f8a755ca"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["val = [0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n","newX = np.asarray([val])\n","prediction = np.argmax(model.predict(newX), axis=1)\n","print(prediction[0])\n","print(encoder.inverse_transform(prediction))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JGAcAyDGuCR2","executionInfo":{"status":"ok","timestamp":1681238503525,"user_tz":-330,"elapsed":999,"user":{"displayName":"Kavindu Balasooriya","userId":"09852269833330150558"}},"outputId":"be2f0899-3cd8-45fd-ea88-64cb705d4920"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 60ms/step\n","2\n","['Acne']\n"]}]},{"cell_type":"code","source":["from keras.utils import plot_model\n","plot_model(model)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"jzRLGVi_-STo","executionInfo":{"status":"ok","timestamp":1681238508174,"user_tz":-330,"elapsed":807,"user":{"displayName":"Kavindu Balasooriya","userId":"09852269833330150558"}},"outputId":"1a688675-9662-42d8-efb9-1992bca2e5b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["from tensorflow.keras.models import save_model"],"metadata":{"id":"t9q_8eqzAmG5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pickle"],"metadata":{"id":"FMqAXMkTAdBZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pickle.dump(model, open('model.pkl', 'wb'))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V0PUeINID0v-","executionInfo":{"status":"ok","timestamp":1681238585531,"user_tz":-330,"elapsed":1633,"user":{"displayName":"Kavindu Balasooriya","userId":"09852269833330150558"}},"outputId":"ad3e228d-8c6c-4608-e49b-bbde189f53bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:Found untraced functions such as _update_step_xla while saving (showing 1 of 1). These functions will not be directly callable after loading.\n"]}]},{"cell_type":"code","source":["pip freeze > requirements.txt"],"metadata":{"id":"nZLrYG5WtbUV"},"execution_count":null,"outputs":[]}]}